{"ast":null,"code":"var _jsxFileName = \"D:\\\\[PROGATE]\\\\Progate - React JS Web Dev\\\\2. Project\\\\to-do-list\\\\to-do-list\\\\src\\\\Todolist.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todolist extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      completed: [],\n      updateText: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.props.items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.text, /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleCompleteClick(item),\n            children: \"Complete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleUpdateClick(item),\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleDeleteClick(item),\n            children: \"X\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 21\n          }, this)]\n        }, item.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Completed Task List : \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.completed.map(complete => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: complete.text\n        }, complete.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleCompleteClick(item) {\n    const items = this.props.items;\n    const index = items.indexOf(item);\n\n    if (index !== -1) {\n      items.splice(index, 1);\n      this.setState(state => ({\n        completed: state.completed.concat(item),\n        items: items\n      }));\n    }\n  }\n\n  handleDeleteClick(item) {\n    const items = this.props.items;\n    const index = items.indexOf(item);\n\n    if (index !== -1) {\n      items.splice(index, 1);\n      this.setState({\n        items: items\n      });\n    }\n  }\n\n  handleUpdateClick(e, item) {\n    const items = this.props.items;\n    const index = items.indexOf(item);\n    items[index].text = this.state.updateText;\n    e.preventDefault();\n\n    if (this.state.text.length === 0) {\n      return;\n    }\n\n    this.setState({\n      items: items,\n      updateText: ''\n    });\n  }\n\n}\n\nexport default Todolist;","map":{"version":3,"names":["React","Todolist","Component","constructor","props","state","completed","updateText","render","items","map","item","text","handleCompleteClick","handleUpdateClick","handleDeleteClick","id","complete","index","indexOf","splice","setState","concat","e","preventDefault","length"],"sources":["D:/[PROGATE]/Progate - React JS Web Dev/2. Project/to-do-list/to-do-list/src/Todolist.js"],"sourcesContent":["import React from 'react';\r\n\r\nclass Todolist extends React.Component {    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { completed: [], updateText: '' };            \r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {this.props.items.map(item => (\r\n                    <li key={item.id}>\r\n                    {item.text}\r\n                    <button onClick={() => this.handleCompleteClick(item)}>Complete</button>\r\n                    <button onClick={() => this.handleUpdateClick(item)}>Update</button>\r\n                    <button onClick={() => this.handleDeleteClick(item)}>X</button>\r\n                    </li>                \r\n                    ))}\r\n                </ul>\r\n                <h5>Completed Task List : </h5>\r\n                <ul>\r\n                    {this.state.completed.map(complete => (\r\n                    <li key={complete.id}>\r\n                    {complete.text}                    \r\n                    </li>                \r\n                    ))}\r\n                </ul>                \r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleCompleteClick(item) {           \r\n        const items = this.props.items;\r\n        const index =  items.indexOf(item);\r\n        if(index !== -1) {\r\n            items.splice(index,1);\r\n            this.setState( state => ({\r\n                completed: state.completed.concat(item),            \r\n                items: items,                                 \r\n              })\r\n              );\r\n        }\r\n    }\r\n\r\n    handleDeleteClick(item) {           \r\n        const items = this.props.items;\r\n        const index =  items.indexOf(item);\r\n        if(index !== -1) {\r\n            items.splice(index,1);\r\n            this.setState( {                          \r\n                items: items,                                 \r\n              }\r\n            );\r\n        }\r\n    }\r\n\r\n    handleUpdateClick(e, item) {\r\n        const items = this.props.items;\r\n        const index =  items.indexOf(item);\r\n        items[index].text = this.state.updateText\r\n\r\n        e.preventDefault();\r\n        if (this.state.text.length === 0) {\r\n        return;\r\n        }    \r\n        this.setState({\r\n            items: items,\r\n            updateText: ''            \r\n        });\r\n    }\r\n}\r\n\r\nexport default Todolist;"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,QAAN,SAAuBD,KAAK,CAACE,SAA7B,CAAuC;EACnCC,WAAW,CAACC,KAAD,EAAQ;IACf,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MAAEC,SAAS,EAAE,EAAb;MAAiBC,UAAU,EAAE;IAA7B,CAAb;EACD;;EACHC,MAAM,GAAG;IACL,oBACI;MAAA,wBACI;QAAA,UACK,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,GAAjB,CAAqBC,IAAI,iBAC1B;UAAA,WACCA,IAAI,CAACC,IADN,eAEA;YAAQ,OAAO,EAAE,MAAM,KAAKC,mBAAL,CAAyBF,IAAzB,CAAvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAFA,eAGA;YAAQ,OAAO,EAAE,MAAM,KAAKG,iBAAL,CAAuBH,IAAvB,CAAvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAHA,eAIA;YAAQ,OAAO,EAAE,MAAM,KAAKI,iBAAL,CAAuBJ,IAAvB,CAAvB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAJA;QAAA,GAASA,IAAI,CAACK,EAAd;UAAA;UAAA;UAAA;QAAA,QADC;MADL;QAAA;QAAA;QAAA;MAAA,QADJ,eAWI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ,eAYI;QAAA,UACK,KAAKX,KAAL,CAAWC,SAAX,CAAqBI,GAArB,CAAyBO,QAAQ,iBAClC;UAAA,UACCA,QAAQ,CAACL;QADV,GAASK,QAAQ,CAACD,EAAlB;UAAA;UAAA;UAAA;QAAA,QADC;MADL;QAAA;QAAA;QAAA;MAAA,QAZJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAsBH;;EAEDH,mBAAmB,CAACF,IAAD,EAAO;IACtB,MAAMF,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAzB;IACA,MAAMS,KAAK,GAAIT,KAAK,CAACU,OAAN,CAAcR,IAAd,CAAf;;IACA,IAAGO,KAAK,KAAK,CAAC,CAAd,EAAiB;MACbT,KAAK,CAACW,MAAN,CAAaF,KAAb,EAAmB,CAAnB;MACA,KAAKG,QAAL,CAAehB,KAAK,KAAK;QACrBC,SAAS,EAAED,KAAK,CAACC,SAAN,CAAgBgB,MAAhB,CAAuBX,IAAvB,CADU;QAErBF,KAAK,EAAEA;MAFc,CAAL,CAApB;IAKH;EACJ;;EAEDM,iBAAiB,CAACJ,IAAD,EAAO;IACpB,MAAMF,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAzB;IACA,MAAMS,KAAK,GAAIT,KAAK,CAACU,OAAN,CAAcR,IAAd,CAAf;;IACA,IAAGO,KAAK,KAAK,CAAC,CAAd,EAAiB;MACbT,KAAK,CAACW,MAAN,CAAaF,KAAb,EAAmB,CAAnB;MACA,KAAKG,QAAL,CAAe;QACXZ,KAAK,EAAEA;MADI,CAAf;IAIH;EACJ;;EAEDK,iBAAiB,CAACS,CAAD,EAAIZ,IAAJ,EAAU;IACvB,MAAMF,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAzB;IACA,MAAMS,KAAK,GAAIT,KAAK,CAACU,OAAN,CAAcR,IAAd,CAAf;IACAF,KAAK,CAACS,KAAD,CAAL,CAAaN,IAAb,GAAoB,KAAKP,KAAL,CAAWE,UAA/B;IAEAgB,CAAC,CAACC,cAAF;;IACA,IAAI,KAAKnB,KAAL,CAAWO,IAAX,CAAgBa,MAAhB,KAA2B,CAA/B,EAAkC;MAClC;IACC;;IACD,KAAKJ,QAAL,CAAc;MACVZ,KAAK,EAAEA,KADG;MAEVF,UAAU,EAAE;IAFF,CAAd;EAIH;;AApEkC;;AAuEvC,eAAeN,QAAf"},"metadata":{},"sourceType":"module"}